package de.sitescrawler.jpa;
// Generated 26.04.2017 10:42:02 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Filterprofilgruppe generated by hbm2java
 */
@Entity
@Table(name = "Filterprofilgruppe", catalog = "sitescrawler_dev_db")
public class Filterprofilgruppe implements java.io.Serializable
{

    private static final long serialVersionUID = 1L;
    private FilterprofilgruppeId id;
    private Filtermanager        filtermanager;
    private Intervall            intervall;
    private Date                 letzteerstellung;
    private Set<Nutzer>          empfaenger        = new HashSet<Nutzer>(0);
    private Set<Uhrzeit>         uhrzeiten       = new HashSet<Uhrzeit>(0);
    private Set<Archiveintrag>   archiveintraege = new HashSet<Archiveintrag>(0);
    private Set<Filterprofil>    filterprofile  = new HashSet<Filterprofil>(0);

    public Filterprofilgruppe()
    {
    }

    public Filterprofilgruppe(FilterprofilgruppeId id, Filtermanager filtermanager, Intervall intervall)
    {
        this.id = id;
        this.filtermanager = filtermanager;
        this.intervall = intervall;
    }

    public Filterprofilgruppe(FilterprofilgruppeId id, Filtermanager filtermanager, Intervall intervall, Date letzteerstellung, Set<Nutzer> nutzer,
                              Set<Uhrzeit> uhrzeiten, Set<Archiveintrag> archiveintraege, Set<Filterprofil> filterprofile)
    {
        this.id = id;
        this.filtermanager = filtermanager;
        this.intervall = intervall;
        this.letzteerstellung = letzteerstellung;
        this.empfaenger = nutzer;
        this.uhrzeiten = uhrzeiten;
        this.archiveintraege = archiveintraege;
        this.filterprofile = filterprofile;
    }

    @EmbeddedId

    @AttributeOverrides({ @AttributeOverride(name = "titel", column = @Column(name = "titel", nullable = false)),
                          @AttributeOverride(name = "filtermanagerIdentifikation",
                                             column = @Column(name = "Filtermanager_identifikation", nullable = false, length = 45)) })
    public FilterprofilgruppeId getId()
    {
        return this.id;
    }

    public void setId(FilterprofilgruppeId id)
    {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Filtermanager_identifikation", nullable = false, insertable = false, updatable = false)
    public Filtermanager getFiltermanager()
    {
        return this.filtermanager;
    }

    public void setFiltermanager(Filtermanager filtermanager)
    {
        this.filtermanager = filtermanager;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Intervall_intervall", nullable = false)
    public Intervall getIntervall()
    {
        return this.intervall;
    }

    public void setIntervall(Intervall intervall)
    {
        this.intervall = intervall;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "letzteerstellung", length = 19)
    public Date getLetzteerstellung()
    {
        return this.letzteerstellung;
    }

    public void setLetzteerstellung(Date letzteerstellung)
    {
        this.letzteerstellung = letzteerstellung;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "empfaenger", catalog = "sitescrawler_dev_db",
               joinColumns = { @JoinColumn(name = "Filtergruppe_titel", nullable = false, updatable = false),
                               @JoinColumn(name = "Filtergruppe_Filtermanager_identifikation", nullable = false, updatable = false) },
               inverseJoinColumns = { @JoinColumn(name = "Nutzer_Filtermanager_identifikation", nullable = false, updatable = false) })
    public Set<Nutzer> getEmpfaenger()
    {
        return this.empfaenger;
    }

    public void setEmpfaenger(Set<Nutzer> empfaenger)
    {
        this.empfaenger = empfaenger;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "Filtergruppe_erstellt_zu_Uhrzeit", catalog = "sitescrawler_dev_db",
               joinColumns = { @JoinColumn(name = "Filtergruppe_titel", nullable = false, updatable = false),
                               @JoinColumn(name = "Filtergruppe_Filtermanager_identifikation", nullable = false, updatable = false) },
               inverseJoinColumns = { @JoinColumn(name = "Uhrzeit_uhrzeit", nullable = false, updatable = false) })
    public Set<Uhrzeit> getUhrzeiten()
    {
        return this.uhrzeiten;
    }

    public void setUhrzeiten(Set<Uhrzeit> uhrzeiten)
    {
        this.uhrzeiten = uhrzeiten;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "filterprofilgruppe")
    public Set<Archiveintrag> getArchiveintraege()
    {
        return this.archiveintraege;
    }

    public void setArchiveintraege(Set<Archiveintrag> archiveintraege)
    {
        this.archiveintraege = archiveintraege;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "filterprofilgruppe_beinhaltet_filterprofil", catalog = "sitescrawler_dev_db",
               joinColumns = { @JoinColumn(name = "Filtergruppe_titel", nullable = false, updatable = false),
                               @JoinColumn(name = "Filtergruppe_Filtermanager_identifikation", nullable = false, updatable = false) },
               inverseJoinColumns = { @JoinColumn(name = "Filterprofil_Filtermanager_identifikation", nullable = false, updatable = false) })
    public Set<Filterprofil> getFilterprofile()
    {
        return this.filterprofile;
    }

    public void setFilterprofile(Set<Filterprofil> filterprofile)
    {
        this.filterprofile = filterprofile;
    }

}
