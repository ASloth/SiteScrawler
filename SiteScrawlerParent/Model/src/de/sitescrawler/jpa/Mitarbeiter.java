package de.sitescrawler.jpa;
// Generated 26.04.2017 10:42:02 by Hibernate Tools 5.2.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Mitarbeiter generated by hbm2java
 */
@Entity
@Table(name = "Mitarbeiter", catalog = "sitescrawler_dev_db")
public class Mitarbeiter implements java.io.Serializable
{

    private static final long serialVersionUID = 1L;
    private MitarbeiterId id;
    private Firma         firma;
    private Firmenrolle   firmenrolle;
    private Nutzer        nutzer;
    
    @Transient
    public void setRolle(de.sitescrawler.model.Firmenrolle rolle){
    	switch(rolle)
    	{
		case Administrator:
			getFirmenrolle().setFirmenrolle("Administrator");
			break;
		case Bearbeiter:
			getFirmenrolle().setFirmenrolle("Bearbeiter");
			break;
		case Mitarbeiter:
			getFirmenrolle().setFirmenrolle("Mitarbeiter");
			break; 
    	} 
    }
    
    @Transient
    public de.sitescrawler.model.Firmenrolle getRolle(){
    	switch(getFirmenrolle().getFirmenrolle())
    	{
    	case "Administrator":
    		return de.sitescrawler.model.Firmenrolle.Administrator;
    	 default:
    		return de.sitescrawler.model.Firmenrolle.Mitarbeiter;
    	} 
    }

    public Mitarbeiter()
    {
    }

    public Mitarbeiter(MitarbeiterId id, Firma firma, Firmenrolle firmenrolle, Nutzer nutzer)
    {
        this.id = id;
        this.firma = firma;
        this.firmenrolle = firmenrolle;
        this.nutzer = nutzer;
    }

    @EmbeddedId

    @AttributeOverrides({ @AttributeOverride(name = "firmenrolleFirmenrolle",
                                             column = @Column(name = "Firmenrolle_firmenrolle", nullable = false, length = 45)),
                          @AttributeOverride(name = "nutzerFiltermanagerIdentifikation",
                                             column = @Column(name = "Nutzer_Filtermanager_identifikation", nullable = false, length = 45)),
                          @AttributeOverride(name = "firmaFiltermanagerIdentifikation",
                                             column = @Column(name = "Firma_Filtermanager_identifikation", nullable = false, length = 45)) })
    public MitarbeiterId getId()
    {
        return this.id;
    }

    public void setId(MitarbeiterId id)
    {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Firma_Filtermanager_identifikation", nullable = false, insertable = false, updatable = false)
    public Firma getFirma()
    {
        return this.firma;
    }

    public void setFirma(Firma firma)
    {
        this.firma = firma;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Firmenrolle_firmenrolle", nullable = false, insertable = false, updatable = false)
    public Firmenrolle getFirmenrolle()
    {
        return this.firmenrolle;
    }

    public void setFirmenrolle(Firmenrolle firmenrolle)
    {
        this.firmenrolle = firmenrolle;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Nutzer_Filtermanager_identifikation", nullable = false, insertable = false, updatable = false)
    public Nutzer getNutzer()
    {
        return this.nutzer;
    }

    public void setNutzer(Nutzer nutzer)
    {
        this.nutzer = nutzer;
    }

}
