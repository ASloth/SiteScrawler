package de.sitescrawler.jpa;
// Generated 02.05.2017 16:40:27 by Hibernate Tools 5.2.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Archiveintrag generated by hbm2java
 */
@Entity
public class Archiveintrag implements java.io.Serializable
{

    private static final long  serialVersionUID = 1L;
    private Integer            archiveintragid;
    private Filterprofilgruppe filterprofilgruppe;
    private Date               erstellungsdatum;
    private Set<Artikel>       artikel          = new HashSet<>(0);

    public Archiveintrag()
    {
    }

    public Archiveintrag(Filterprofilgruppe filterprofilgruppe)
    {
        this.filterprofilgruppe = filterprofilgruppe;
    }

    public Archiveintrag(Filterprofilgruppe filterprofilgruppe, Date erstellungsdatum, Set<Artikel> artikel)
    {
        this.filterprofilgruppe = filterprofilgruppe;
        this.erstellungsdatum = erstellungsdatum;
        this.artikel = artikel;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "archiveintragid", unique = true, nullable = false)
    public Integer getArchiveintragid()
    {
        return this.archiveintragid;
    }

    public void setArchiveintragid(Integer archiveintragid)
    {
        this.archiveintragid = archiveintragid;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH })
    @JoinColumn(name = "Filtergruppe_FilterprofilgruppeId", nullable = false)
    public Filterprofilgruppe getFilterprofilgruppe()
    {
        return this.filterprofilgruppe;
    }

    public void setFilterprofilgruppe(Filterprofilgruppe filterprofilgruppe)
    {
        this.filterprofilgruppe = filterprofilgruppe;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "erstellungsdatum", length = 19)
    public Date getErstellungsdatum()
    {
        return this.erstellungsdatum;
    }

    public void setErstellungsdatum(Date erstellungsdatum)
    {
        this.erstellungsdatum = erstellungsdatum;
    }

    @ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH })
    @JoinTable(name = "Archiveintrag_beinhaltet_Artikel",
               joinColumns = { @JoinColumn(name = "Archiveintrag_archiveintragid", nullable = false, updatable = false) },
               inverseJoinColumns = { @JoinColumn(name = "Artikel_solrid", nullable = false, updatable = false) })
    public Set<Artikel> getArtikel()
    {
        return this.artikel;
    }

    public void setArtikel(Set<Artikel> artikelsolr)
    {
        this.artikel = artikelsolr;
    }

}
