package de.sitescrawler.jpa;
// Generated 26.04.2017 10:42:02 by Hibernate Tools 5.2.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import de.sitescrawler.model.Artikel;

/**
 * Archiveintrag generated by hbm2java
 */
@Entity
@Table(name = "Archiveintrag", catalog = "sitescrawler_dev_db")
public class Archiveintrag implements java.io.Serializable
{

    private Integer            archiveintragid;
    private Filterprofilgruppe filterprofilgruppe;
    private Date               erstellungsdatum;
    private Set<Artikelsolr>   artikelsolr = new HashSet<>(0);
    private List<Artikel>	   artikel;

    public Archiveintrag()
    {
    }
    
    public boolean getIsLoaded(){
    	return artikel != null;
    }

    public Archiveintrag(Filterprofilgruppe filterprofilgruppe)
    {
        this.filterprofilgruppe = filterprofilgruppe;
    }

    public Archiveintrag(Filterprofilgruppe filterprofilgruppe, Date erstellungsdatum, Set<Artikelsolr> artikelsolr)
    {
        this.filterprofilgruppe = filterprofilgruppe;
        this.erstellungsdatum = erstellungsdatum;
        this.artikelsolr = artikelsolr;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "archiveintragid", unique = true, nullable = false)
    public Integer getArchiveintragid()
    {
        return this.archiveintragid;
    }

    public void setArchiveintragid(Integer archiveintragid)
    {
        this.archiveintragid = archiveintragid;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumns({ @JoinColumn(name = "Filtergruppe_titel", referencedColumnName = "titel", nullable = false),
                   @JoinColumn(name = "Filtergruppe_Filtermanager_identifikation", referencedColumnName = "Filtermanager_identifikation", nullable = false) })
    public Filterprofilgruppe getFilterprofilgruppe()
    {
        return this.filterprofilgruppe;
    }

    public void setFilterprofilgruppe(Filterprofilgruppe filterprofilgruppe)
    {
        this.filterprofilgruppe = filterprofilgruppe;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "erstellungsdatum", length = 19)
    public Date getErstellungsdatum()
    {
        return this.erstellungsdatum;
    }

    public void setErstellungsdatum(Date erstellungsdatum)
    {
        this.erstellungsdatum = erstellungsdatum;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "archiveintrag")
    public Set<Artikelsolr> getArtikelsolr()
    {
        return this.artikelsolr;
    }

    public void setArtikelsolr(Set<Artikelsolr> artikelsolr)
    {
        this.artikelsolr = artikelsolr;
    }

    @Transient
	public List<Artikel> getArtikel() {
		return artikel;
	}

    @Transient
	public void setArtikel(List<Artikel> artikel) {
		this.artikel = artikel; 
	}

}
