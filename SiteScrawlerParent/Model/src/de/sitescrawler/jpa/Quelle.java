package de.sitescrawler.jpa;
// Generated 02.05.2017 16:40:27 by Hibernate Tools 5.2.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;

/**
 * Quelle generated by hbm2java
 */
@Entity
public class Quelle implements java.io.Serializable
{

    private static final long serialVersionUID = 1L;
    private Integer           qid;
    private String            name;
    private byte[]            bild;
    private String            rsslink;
    private String            tagOderId;
    private Set<Filterprofil> filterprofile    = new HashSet<>(0);
    private Set<Artikel>      artikel          = new HashSet<>(0);

    public Quelle()
    {
    }

    public Quelle(String name, String rsslink)
    {
        this.name = name;
        this.rsslink = rsslink;
    }

    public Quelle(String name, byte[] bild, String rsslink, String tagOderId, Set<Filterprofil> filterprofile)
    {
        this.name = name;
        this.bild = bild;
        this.rsslink = rsslink;
        this.tagOderId = tagOderId;
        this.filterprofile = filterprofile;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "qid", unique = true, nullable = false)
    public Integer getQid()
    {
        return this.qid;
    }

    public void setQid(Integer qid)
    {
        this.qid = qid;
    }

    @Column(name = "name", nullable = false)
    public String getName()
    {
        return this.name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    @Column(name = "bild")
    public byte[] getBild()
    {
        return this.bild;
    }

    public void setBild(byte[] bild)
    {
        this.bild = bild;
    }

    @Column(name = "rsslink", nullable = false)
    public String getRsslink()
    {
        return this.rsslink;
    }

    public void setRsslink(String rsslink)
    {
        this.rsslink = rsslink;
    }

    @Column(name = "tagOderId")
    public String getTagOderId()
    {
        return this.tagOderId;
    }

    public void setTagOderId(String tagOderId)
    {
        this.tagOderId = tagOderId;
    }

    @ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH })
    @JoinTable(name = "Filterprofil_beinhaltet_Quelle", joinColumns = { @JoinColumn(name = "Quelle_qid", nullable = false, updatable = false) },
               inverseJoinColumns = { @JoinColumn(name = "Filterprofil_FilterprofilId", nullable = false, updatable = false) })
    public Set<Filterprofil> getFilterprofile()
    {
        return this.filterprofile;
    }

    public void setFilterprofile(Set<Filterprofil> filterprofile)
    {
        this.filterprofile = filterprofile;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "quelle", cascade = CascadeType.ALL)
    public Set<Artikel> getArtikel()
    {
        return this.artikel;
    }

    public void setArtikel(Set<Artikel> artikel)
    {
        this.artikel = artikel;
    }

    @Override
    public String toString()
    {
        return this.name + " " + this.rsslink;
    }

}
