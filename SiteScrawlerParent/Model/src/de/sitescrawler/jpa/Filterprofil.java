package de.sitescrawler.jpa;

// Generated 27.04.2017 12:21:03 by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


/**
 * Filterprofil generated by hbm2java
 */
@Entity
@Table(name = "Filterprofil", catalog = "sitescrawler_dev_db")
public class Filterprofil implements java.io.Serializable
{


    private static final long serialVersionUID = 1L;
    private Integer                 filterprofilId;
    private Filtermanager           filtermanager;
    private String                  filterprofilname;
    private String                  tagstring;
    private Set<Kategorie>          kategorien          = new HashSet<Kategorie>(0);
    private Set<Quelle>             quellen             = new HashSet<Quelle>(0);

    public Filterprofil()
    {
    }

    public Filterprofil(Filtermanager filtermanager, String filterprofilname, String tagstring, Set<Kategorie> kategorien,
                         Set<Quelle> quellen)
    {
        this.filtermanager = filtermanager;
        this.filterprofilname = filterprofilname;
        this.tagstring = tagstring;
        this.kategorien = kategorien;
        this.quellen = quellen;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "FilterprofilId", unique = true, nullable = false)
    public Integer getFilterprofilId()
    {
        return this.filterprofilId;
    }

    public void setFilterprofilId(Integer filterprofilId)
    {
        this.filterprofilId = filterprofilId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Filtermanager_identifikation")
    public Filtermanager getFiltermanager()
    {
        return this.filtermanager;
    }

    public void setFiltermanager(Filtermanager filtermanager)
    {
        this.filtermanager = filtermanager;
    }

    @Column(name = "filterprofilname")
    public String getFilterprofilname()
    {
        return this.filterprofilname;
    }

    public void setFilterprofilname(String filterprofilname)
    {
        this.filterprofilname = filterprofilname;
    }

    @Column(name = "tagstring", length = 65535)
    public String getTagstring()
    {
        return this.tagstring;
    }

    public void setTagstring(String tagstring)
    {
        this.tagstring = tagstring;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "Filterprofil_beinhaltet_Kategorie", catalog = "sitescrawler_dev_db",
               joinColumns = { @JoinColumn(name = "Filterprofil_FilterprofilId", nullable = false, updatable = false) },
               inverseJoinColumns = { @JoinColumn(name = "Kategorie_kategorienname", nullable = false, updatable = false) })
    public Set<Kategorie> getKategorien()
    {
        return this.kategorien;
    }

    public void setKategorien(Set<Kategorie> kategorien)
    {
        this.kategorien = kategorien;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "Filterprofil_beinhaltet_Quelle", catalog = "sitescrawler_dev_db",
               joinColumns = { @JoinColumn(name = "Filterprofil_FilterprofilId", nullable = false, updatable = false) },
               inverseJoinColumns = { @JoinColumn(name = "Quelle_qid", nullable = false, updatable = false) })
    public Set<Quelle> getQuellen()
    {
        return this.quellen;
    }

    public void setQuellen(Set<Quelle> quellen)
    {
        this.quellen = quellen;
    }

}
